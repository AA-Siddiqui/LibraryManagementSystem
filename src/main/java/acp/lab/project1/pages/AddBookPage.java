/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package acp.lab.project1.pages;
import acp.lab.project1.utils.ConnectionManager;
import acp.lab.project1.utils.DefinedColors;
import java.sql.*;
/**
 *
 * @author addan
 */
public class AddBookPage extends javax.swing.JFrame {
    /**
     * Creates new form LoginForm
     */
    public AddBookPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        signupButton = new javax.swing.JButton();
        urlField = new javax.swing.JTextField();
        isbnField = new javax.swing.JTextField();
        pagesField = new javax.swing.JTextField();
        yearField = new javax.swing.JTextField();
        descriptionField = new javax.swing.JTextField();
        authorField = new javax.swing.JTextField();
        categoryField = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        // jPanel1.setBackground(new java.awt.Color(89, 13, 34));
        jPanel1.setBackground(DefinedColors.backgroundPrimaryColor);
        jPanel1.setPreferredSize(new java.awt.Dimension(640, 420));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        //jPanel3.setBackground(new java.awt.Color(164, 19, 60));
        jPanel3.setBackground(DefinedColors.backgroundLightColor);
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel3.setMaximumSize(new java.awt.Dimension(752, 540));
        jPanel3.setMinimumSize(new java.awt.Dimension(752, 540));
        jPanel3.setPreferredSize(new java.awt.Dimension(752, 540));
        java.awt.GridBagLayout jPanel3Layout = new java.awt.GridBagLayout();
        jPanel3Layout.columnWidths = new int[] {270, 270};
        jPanel3.setLayout(jPanel3Layout);

        jLabel1.setFont(new java.awt.Font("Roboto Condensed", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("<html><div style='text-align: center;'>Add Books</div></html>");
        jLabel1.setToolTipText("");
        jLabel1.setAlignmentY(1.0F);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(20, 50, 20, 50);
        jPanel3.add(jLabel1, gridBagConstraints);

        titleField.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        titleField.setText("Title");
        titleField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 15, 10, 15);
        jPanel3.add(titleField, gridBagConstraints);

        //jButton1.setBackground(new java.awt.Color(128, 15, 47));
        signupButton.setBackground(DefinedColors.backgroundSecondaryColor);
        signupButton.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        signupButton.setForeground(new java.awt.Color(255, 255, 255));
        signupButton.setText("Add");
        signupButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        signupButton.setMargin(new java.awt.Insets(7, 14, 7, 14));
        signupButton.setMaximumSize(new java.awt.Dimension(150, 40));
        signupButton.setMinimumSize(new java.awt.Dimension(150, 40));
        signupButton.setPreferredSize(new java.awt.Dimension(150, 40));
        signupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 5, 15);
        jPanel3.add(signupButton, gridBagConstraints);

        urlField.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        urlField.setText("Cover URL");
        urlField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanel3.add(urlField, gridBagConstraints);

        isbnField.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        isbnField.setText("ISBN");
        isbnField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isbnFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 15, 10, 15);
        jPanel3.add(isbnField, gridBagConstraints);

        pagesField.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        pagesField.setText("Pages");
        pagesField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagesFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 15, 15, 15);
        jPanel3.add(pagesField, gridBagConstraints);

        yearField.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        yearField.setText("Year Published");
        yearField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 15, 15, 15);
        jPanel3.add(yearField, gridBagConstraints);

        descriptionField.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        descriptionField.setText("Description");
        descriptionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanel3.add(descriptionField, gridBagConstraints);

        authorField.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        authorField.setText("Author (Enter multiple seperated by ;)");
        authorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanel3.add(authorField, gridBagConstraints);

        categoryField.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        categoryField.setText("Genre (Enter multiple seperated by ;)");
        categoryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 15, 15);
        jPanel3.add(categoryField, gridBagConstraints);

        //jButton1.setBackground(new java.awt.Color(128, 15, 47));
        backButton.setBackground(DefinedColors.backgroundSecondaryColor);
        backButton.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        backButton.setMargin(new java.awt.Insets(7, 14, 7, 14));
        backButton.setMaximumSize(new java.awt.Dimension(150, 40));
        backButton.setMinimumSize(new java.awt.Dimension(150, 40));
        backButton.setPreferredSize(new java.awt.Dimension(150, 40));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 5, 15);
        jPanel3.add(backButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 121;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(65, 160, 65, 160);
        jPanel1.add(jPanel3, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void titleFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleFieldActionPerformed

    private void urlFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_urlFieldActionPerformed

    private void isbnFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isbnFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isbnFieldActionPerformed

    private void pagesFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagesFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pagesFieldActionPerformed

    private void signupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupButtonActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        try {
            con = ConnectionManager.getConnection();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        if (con == null) return;
        
        boolean uniqueUsername = true;
        
        if (isbnField.getText().length() != isbnField.getText().replace(" ", "").length()) {
            javax.swing.JOptionPane.showMessageDialog(this, "ISBN can't have spaces!", 
                                   "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            uniqueUsername = !con.createStatement().executeQuery("select ISBN from Book where ISBN = \'" + isbnField.getText() + "\'").next();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        if (!uniqueUsername) {
            javax.swing.JOptionPane.showMessageDialog(this, "ISBN already in use!", 
                                   "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        for (char c: isbnField.getText().toCharArray()) {
            if ((c < '0' || c > '9')) {
                javax.swing.JOptionPane.showMessageDialog(this, "ISBN should include numbers only", 
                                   "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        for (char c: yearField.getText().toCharArray()) {
            if ((c < '0' || c > '9')) {
                javax.swing.JOptionPane.showMessageDialog(this, "Invalid year", 
                                   "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        for (char c: pagesField.getText().toCharArray()) {
            if ((c < '0' || c > '9')) {
                javax.swing.JOptionPane.showMessageDialog(this, "Invalid no of pages", 
                                   "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        boolean uniquePhone = true;
        try {
            uniquePhone = !con.createStatement().executeQuery("select PhoneNo from UserDetails where PhoneNo = \'" + titleField.getText() + "\'").next();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        if (!uniquePhone) {
            javax.swing.JOptionPane.showMessageDialog(this, "Phone No already in use!", 
                                   "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int inserted = con.createStatement().executeUpdate("INSERT INTO Book (ISBN, Title, Description, YearPublished, Pages, ThumbnailURL) Values(\'" + isbnField.getText() + "\', \'" + titleField.getText() + "\', \'" + descriptionField.getText() + "\', " + yearField.getText() + ", " + pagesField.getText() + ", \'" + urlField.getText() + "\');");
            System.out.println(Integer.valueOf(inserted).toString() + " records added!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        int bid = -1;
        try {
            ResultSet rs = con.createStatement().executeQuery("select max(BookId) as cd from Book");
            while (rs.next()) {
                bid = rs.getInt("cd");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        try {
            for (String s: authorField.getText().split(";")) {
                int inserted = con.createStatement().executeUpdate("INSERT INTO Author (BookId, FullName) Values(" + bid + ", \'" + s + "\');");
                System.out.println(Integer.valueOf(inserted).toString() + " records added!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        try {
            for (String s: categoryField.getText().split(";")) {
                int inserted = con.createStatement().executeUpdate("INSERT INTO Category (BookId, FullName) Values(" + bid + ", \'" + s + "\');");
                System.out.println(Integer.valueOf(inserted).toString() + " records added!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_signupButtonActionPerformed

    private void yearFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearFieldActionPerformed

    private void descriptionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionFieldActionPerformed

    private void authorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorFieldActionPerformed

    private void categoryFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryFieldActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        acp.lab.project1.pages.AdminManagementPage.main(new String[]{});
        setVisible(false);
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBookPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBookPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBookPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBookPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBookPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authorField;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField categoryField;
    private javax.swing.JTextField descriptionField;
    private javax.swing.JTextField isbnField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField pagesField;
    private javax.swing.JButton signupButton;
    private javax.swing.JTextField titleField;
    private javax.swing.JTextField urlField;
    private javax.swing.JTextField yearField;
    // End of variables declaration//GEN-END:variables
}
