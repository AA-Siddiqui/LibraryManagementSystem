/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package acp.lab.project1.pages;

import acp.lab.project1.utils.ConnectionManager;
import acp.lab.project1.utils.DefinedColors;
import java.sql.*;
import java.util.LinkedList;
import acp.lab.project1.utils.SearchListRow;
import acp.lab.project1.utils.SearchBlockItem;
import acp.lab.project1.utils.ThumbnailManager;
import java.io.IOException;

/**
 *
 * @author addan
 */
public class SearchPage extends javax.swing.JFrame {
    private LinkedList<SearchListRow> listRows;
    private LinkedList<SearchBlockItem> blockItems;
    /**
     * Creates new form LoginForm
     */
    public SearchPage() {
        listRows = new LinkedList<>();
        blockItems = new LinkedList<>();
        initComponents();
        searchButton.setBackground(DefinedColors.backgroundSecondaryColor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        titleRadio = new javax.swing.JRadioButton();
        authorRadio = new javax.swing.JRadioButton();
        categoryRadio = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(DefinedColors.backgroundPrimaryColor);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(DefinedColors.backgroundPrimaryColor);
        jPanel1.setMaximumSize(new java.awt.Dimension(1280, 720));
        jPanel1.setMinimumSize(new java.awt.Dimension(1280, 720));
        jPanel1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBackground(DefinedColors.backgroundPrimaryColor);
        jPanel4.setMaximumSize(new java.awt.Dimension(1280, 120));
        jPanel4.setMinimumSize(new java.awt.Dimension(1280, 120));
        jPanel4.setPreferredSize(new java.awt.Dimension(1280, 120));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        searchField.setFont(new java.awt.Font("Roboto Condensed", 0, 24)); // NOI18N
        searchField.setText("Search for books");
        searchField.setPreferredSize(new java.awt.Dimension(1040, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(searchField, gridBagConstraints);

        searchButton.setText("GO");
        searchButton.setMaximumSize(new java.awt.Dimension(100, 40));
        searchButton.setMinimumSize(new java.awt.Dimension(100, 40));
        searchButton.setPreferredSize(new java.awt.Dimension(100, 40));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel4.add(searchButton, new java.awt.GridBagConstraints());

        jPanel2.setBackground(DefinedColors.backgroundPrimaryColor);

        titleRadio.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        titleRadio.setForeground(DefinedColors.whiteColor);
        titleRadio.setText("Title");
        buttonGroup1.add(titleRadio);
        titleRadio.setSelected(true);
        jPanel2.add(titleRadio);

        authorRadio.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        authorRadio.setForeground(DefinedColors.whiteColor);
        authorRadio.setText("Author");
        buttonGroup1.add(authorRadio);
        jPanel2.add(authorRadio);

        categoryRadio.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N
        categoryRadio.setForeground(DefinedColors.whiteColor);
        categoryRadio.setText("Category");
        buttonGroup1.add(categoryRadio);
        jPanel2.add(categoryRadio);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel4.add(jPanel2, gridBagConstraints);

        jPanel1.add(jPanel4, new java.awt.GridBagConstraints());

        jPanel5.setBackground(DefinedColors.backgroundPrimaryColor);
        jPanel5.setMaximumSize(new java.awt.Dimension(1280, 600));
        jPanel5.setMinimumSize(new java.awt.Dimension(1280, 600));
        jPanel5.setPreferredSize(new java.awt.Dimension(1280, 600));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setBackground(DefinedColors.backgroundSecondaryColor);
        jTabbedPane1.setForeground(DefinedColors.whiteColor);
        jTabbedPane1.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1280, 600));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1280, 600));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1280, 600));

        jScrollPane4.setBackground(DefinedColors.backgroundLightColor);

        jPanel8.setBackground(DefinedColors.backgroundLightColor);
        jPanel8.setLayout(new java.awt.GridBagLayout());
        jScrollPane4.setViewportView(jPanel8);

        jTabbedPane1.addTab("List", jScrollPane4);

        jScrollPane2.setFont(new java.awt.Font("Roboto Condensed", 0, 12)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(34, 34, 34));
        jPanel3.setLayout(new java.awt.GridBagLayout());
        jScrollPane2.setViewportView(jPanel3);

        jTabbedPane1.addTab("Block", jScrollPane2);

        jPanel5.add(jTabbedPane1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < listRows.size(); i++) {
            jPanel8.remove(listRows.get(i));
        }
        for (int i = 0; i < blockItems.size(); i++) {
            jPanel3.remove(blockItems.get(i));
        }
        Connection con = null;
        try {
            con = ConnectionManager.getConnection();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        if (con == null) return;
        String type = "";
        if (titleRadio.isSelected()) {
            type = "b.Title";
        } else if (authorRadio.isSelected()) {
            type = "a.FullName";
        } else if (categoryRadio.isSelected()) {
            type = "c.FullName";
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "I never doubted people's ability to fuck up this bad. If humans could select one out of three options successfully 100% of the time, world would've had flying cars by now.", 
                                   "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
        LinkedList<Integer> bookIdNo = new LinkedList<>();
        LinkedList<String> bookISBN = new LinkedList<>();
        LinkedList<String> bookTitle = new LinkedList<>();
        LinkedList<String> bookURL = new LinkedList<>();
        LinkedList<String> bookAuthor = new LinkedList<>();
        LinkedList<String> bookCategory = new LinkedList<>();
        
        ResultSet rs = null;
        try {
            rs = con.createStatement().executeQuery("select top 30 b.BookId as BID, b.ISBN as isbn, b.Title as Tit, b.ThumbnailURL as URL from Book b where " + type + " like \'%" + searchField.getText() + "%\'");
            while (rs.next()) {
                boolean dupeFound = false;
                for (int i = 0; i < bookIdNo.size(); i++) {
                    if (bookIdNo.get(i) == rs.getInt("BID")) {
                        dupeFound = true;
                        break;
                    }
                }
                if (dupeFound) continue;
                bookIdNo.add(rs.getInt("BID"));
                bookISBN.add(rs.getString("isbn"));
                bookTitle.add(rs.getString("Tit"));
                bookURL.add(rs.getString("URL"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        String aut = "";
        for (int i = 0; i < bookIdNo.size(); i++) {
            try {
                aut = "";
                rs = con.createStatement().executeQuery("select FullName from Author where BookId = " + bookIdNo.get(i));
                while (rs.next()) {
                    aut += rs.getString("FullName") + "; ";
                }
                bookAuthor.add(aut.substring(0, aut.length() - 2));
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        
        String cat = "";
        for (int i = 0; i < bookIdNo.size(); i++) {
            try {
                cat = "";
                rs = con.createStatement().executeQuery("select FullName from Category where BookId = " + bookIdNo.get(i));
                while (rs.next()) {
                    cat += rs.getString("FullName") + "; ";
                }
                bookCategory.add(cat.substring(0, cat.length() - 2));
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        
        if (bookCategory.size() != bookAuthor.size()) {
            System.out.println("Give up hopes");
        }
        if (bookCategory.size() != bookIdNo.size()) {
            System.out.println("Give up hopes");
        }
        
        for (int i = 0; i < bookIdNo.size(); i++) {
            listRows.add(new SearchListRow(bookTitle.get(i), bookAuthor.get(i), bookCategory.get(i), bookIdNo.get(i)));
            blockItems.add(new SearchBlockItem(bookTitle.get(i), bookAuthor.get(i), bookISBN.get(i), bookURL.get(i), bookIdNo.get(i)));
        }
        
        java.awt.GridBagConstraints gridBagConstraints;
        for (int i = 0; i < listRows.size(); i++) {
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = i;
            jPanel8.add(listRows.get(i), gridBagConstraints);
        }
        
        for (int i = 0; i < blockItems.size(); i++) {
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = i % 4;
            gridBagConstraints.gridy = i / 4;
            jPanel3.add(blockItems.get(i), gridBagConstraints);
        }
        
        javax.swing.SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_searchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton authorRadio;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton categoryRadio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JRadioButton titleRadio;
    // End of variables declaration//GEN-END:variables
}
